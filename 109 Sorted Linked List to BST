class Solution:
    def sortedListToBST(self, head: ListNode) -> TreeNode:
        lst = []
        x = head
        while x:
            lst.append(x.val)
            x = x.next
       
        def recussion(l: list, left: int, right: int) -> TreeNode:
            if left>right:
                return None
            mid = (left+right)//2
            root = TreeNode(l[mid])
            root.left = recussion(l,left,mid-1)
            root.right = recussion(l, mid+1, right)
            
            return root
        
        return recussion(lst,0,len(lst)-1)
